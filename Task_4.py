# 1)	Дано 3 числа. Напишите программу, которая выводит True, если хотя бы одно из чисел А, В, С отрицательно. Если нет вывести False.
def num_is_minus():
    num1 = 0
    num2 = 20
    num3 = 30
    if num1 >= 0 and num2 >= 0 and num3 >= 0:
        print(True)
    else:
        print(False)
num_is_minus()

# 2)	Верно ли что, целые n и k имеют одинаковую четность.
def thesame_value(n: int , k: int)-> bool:
    return (n % 2) == (k % 2)
n = 8
k = 4
if thesame_value(n,k):
    print("Целые числа имеют одинаковую четность")
else:
    print("Not have")
# thesame_value(n,k)
# # 3)	Найти количество четных чисел среди заданных трех целых чисел.
# # В ответе вывести количество четных чисел.
def find_even_integer(a: int ,b: int,c:int ):
    count = 0
    if a % 2 == 0:
        count += 1
    if b % 2 == 0:
        count +=1
    if c % 2 == 0:
        count +=1
    return count


print(find_even_integer(10,20,33))
#
# # 4)	Дано двузначное число. Определить является ли сумма его цифр двузначным числом. (Ответ: Да/Нет)
def check_number(a,b):
    if a + b >= 10:
        print(True)
    else:
        print(False)


check_number(5,3)
#
# # 5)	Вывести на экран число "10" 20 раз столбиком.
def stolb_num():
    for i in range(20):
        print(10)

stolb_num()
#
# # 6)	Дано число N. Составить программу выводящую кубы чисел от 1 до N в одну строку.
def cub():
    n = int(input("Enter your n:"))
    for i in range(1,n+1):
        result = i ** i
        print(result)


cub()


# 7)	Найти произведение всех целых чисел от 5 до 20 включительно.
def proiz_num():
    counter = 0
    for i in range(5,20+1):
        a = 5 * i
        counter += a
    print(counter)

proiz_num()


# 8)	Дано число n. Вывести на экран числа 1, 4, 9, 16, 25, ... которые меньше n.
# Sample Input :
# 15
# Sample Output :
# 1 4 9



#
def oput():
    n = 15  #int(input("Введите число n: "))
    i = 1
    while i ** 2 < n:
        print(i ** 2, end=" ")

oput()

# 9)	Дано натуральное число n. Найти значение минимальной цифры в данном числе.
def natur_num():
    n = 45687945649841
    min_gigit = min(str(n))
    print(f"минимальная цифра в заданом значении {n} >>> {min_gigit} ")

natur_num()

# 10)	Напишите программу, принимающую на вход год и выводящую "Високосный", если в этом году действительно 366 дней, и "Не високосный" иначе. Год считается високосным, если его номер делится на 4, но не делится на 100 или же делится на 400.
def leap_year():
    a = int(input("Enter year:"))
    if a % 4 == 0:
        print("Ваш год високосный")
    else:
        print("Ваш год не високосный")


leap_year()


# 11)	*С клавиатуры вводится натуральное число n <= 1000. Выведите n строк вида "На лугу n коров", склоняя слово "коров" в соответствии с числом n. Проверяем большие числа!!!
# Sample Input:
# 7
# Sample Output:
# На лугу 1 корова
# На лугу 2 коровы
# На лугу 3 коровы
# На лугу 4 коровы
# На лугу 5 коров
# На лугу 6 коров
# На лугу 7 коров



def right_word(n: int) -> str:
    if n % 10 == 1 and n % 100 != 11:
        return "корова"
    elif n % 10 in [2, 3, 4] and n % 100 not in [12, 13, 14]:
        return "коровы"
    else:
        return "коров"

n = int(input("Enter quantity cows:"))
for i in range(1,n+1):
    print(f"On field {i} {right_word(i)}")

right_word(n)


# 12)	*Числа Фибоначчи – известная числовая последовательность, в которой первые два члена равны единице, а каждый последующий получается сложением двух предыдущих. По введенному числу n выведите n чисел Фибоначчи через пробел.
# Sample Input:
# 8
# Sample Output:
# 1 1 2 3 5 8 13 21
def num_fib():
    a,b = 1,1
    z =10

    for i in range(z):
        print(a, end=" ")
        a,b = b , a + b

num_fib()

def facorial(c):
    result = 1
    for i in range(1,c+1):
        result *= i
    return result

print(facorial(5))



# 13)	*В Институте биоинформатики между информатиками и биологами устраивается соревнование. Победителям соревнования достанется большой и вкусный пирог. В команде биологов a человек, а в команде информатиков — b человек.
# Нужно заранее разрезать пирог таким образом, чтобы можно было раздать кусочки пирога любой команде, выигравшей соревнование, при этом каждому участнику этой команды должно достаться одинаковое число кусочков пирога. И так как не хочется резать пирог на слишком мелкие кусочки, нужно найти минимальное подходящее число.
# Напишите программу, которая помогает найти это число.
# Программа должна считывать размеры команд (два положительных целых числа a и b, каждое число вводится на отдельной строке) и выводить наименьшее число d, которое делится на оба этих числа без остатка.

